# -*- coding: utf-8 -*-
"""Actividad 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pd6wXlgHvBl-ApYqPllawbPbrMWLiDiN
"""

import numpy as np
import matplotlib.pyplot as plt

# Definición de las funciones objetivo
def f1(x, y):
    return x * np.exp(-x**2 - y**2)

def f2(x):
    return np.sum((x - 2)**2)

# Algoritmo de (1 + 1)-ES para la función f1
def es_1p1_f1():
    x = np.random.uniform(-2, 2)  # Solución inicial
    sigma = 1.0  # Desviación estándar inicial
    convergence = []

    for _ in range(iterations):
        x_new = x + np.random.normal(0, sigma)
        if f1(x_new, 0) < f1(x, 0):
            x = x_new
            sigma *= 1.1  # Ajuste de la desviación estándar
        else:
            sigma *= 0.9  # Ajuste de la desviación estándar
        convergence.append(f1(x, 0))

    return x, f1(x, 0), convergence

# Algoritmo de (1 + 1)-ES para la función f2
def es_1p1_f2():
    x = np.random.uniform(-2, 2, size=(2,))  # Solución inicial
    sigma = 1.0  # Desviación estándar inicial
    convergence = []

    for _ in range(iterations):
        x_new = x + np.random.normal(0, sigma, size=(2,))
        if f2(x_new) < f2(x):
            x = x_new
            sigma *= 1.1  # Ajuste de la desviación estándar
        else:
            sigma *= 0.9  # Ajuste de la desviación estándar
        convergence.append(f2(x))

    return x, f2(x), convergence

# Parámetros
iterations = 100

# Ejecutar los algoritmos y obtener resultados
x_f1, min_f1, convergence_f1 = es_1p1_f1()
x_f2, min_f2, convergence_f2 = es_1p1_f2()

# Graficar resultados
plt.figure(figsize=(12, 6))

# Función f1
plt.subplot(1, 2, 1)
plt.plot(convergence_f1)
plt.title('(1 + 1)-ES - Función f1')
plt.xlabel('Iteración')
plt.ylabel('Valor de la función')
plt.axhline(y=-0.4288, color='r', linestyle='--', label='Mínimo global')
plt.legend()

# Función f2
plt.subplot(1, 2, 2)
plt.plot(convergence_f2)
plt.title('(1 + 1)-ES - Función f2')
plt.xlabel('Iteración')
plt.ylabel('Valor de la función')
plt.axhline(y=0, color='r', linestyle='--', label='Mínimo global')
plt.legend()

plt.tight_layout()
plt.show()